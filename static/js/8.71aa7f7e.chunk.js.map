{"version":3,"sources":["constant.ts","components/common/UserProfile.tsx","components/common/DownloadButton.tsx","components/image/ImageDetailMenu.tsx","components/image/ImageDetailInfo.tsx","components/image/ImageDetailModal.tsx","lib/hooks/useSwrImage.ts","pages/SwrDetailView.tsx"],"names":["API_URL","process","PER_PAGE","STORAGE_KEY","recentSearches","CARD","height","width","gutterSize","Container","styled","div","Info","tw","Avater","flex","Name","Img","img","UserProfile","user","userImageURL","style","src","alt","memo","Button","$visibleText","Text","p","DownloadButton","name","url","visibleText","onClickDownload","useCallback","e","a","stopPropagation","downloadImage","onClick","Icon","button","Popper","$visible","ImageDetailMenu","id","useToggle","visible","toggle","useState","referenceRef","setReferenceRef","popperRef","setPopperRef","usePopper","placement","modifiers","enabled","options","offset","styles","attributes","onClickCopy","copyTextToClipboard","setTimeout","ref","Portal","popper","User","Statistics","Statistic","Downloads","Label","ImageDetailInfo","visibleMenu","maxWidth","likes","views","downloads","padding","fontWeight","formatNumberWithCommas","Modal","setAppElement","Paper","MobileInfoBox","ImageBox","customStyles","overlay","backgroundColor","cursor","zIndex","content","margin","ImageDetailModal","isLoading","isError","data","history","useHistory","useWindowSize","loaded","isMobileDevice","isMobile","window","navigator","phone","tablet","hiddenMobile","closeModal","goBack","onLoad","isOpen","className","onRequestClose","contentLabel","HashLoader","NotFound","largeImageURL","webformatURL","fetcher","axios","get","params","hits","useSwrImage","useSWR","error","SwrDetailView","useParams"],"mappings":"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","file":"static/js/8.71aa7f7e.chunk.js","sourcesContent":["export const API_URL = `${process.env.REACT_APP_PIXABAY_API_URL}?key=${process.env.REACT_APP_PIXABAY_API_KEY}`;\nexport const PER_PAGE = 50;\n\nexport const STORAGE_KEY = {\n  recentSearches: 'recent-searches',\n};\n\nexport const CARD = {\n  height: 236,\n  width: 252,\n  gutterSize: 0,\n};\n","import { CSSProperties, memo } from 'react';\nimport styled from 'styled-components/macro';\nimport tw from 'twin.macro';\nimport { AiOutlineSmile } from 'react-icons/ai';\n\nconst Container = styled.div`\n  ${tw`p-2 pb-4 box-border`};\n`;\nconst Info = tw.div`flex items-center -mx-1`;\nconst Avater = styled.div({\n  ...tw`w-6 h-auto mx-1`,\n  flex: '0 0 auto',\n});\nconst Name = tw.div`mx-1 flex-auto text-sm text-gray-800`;\nconst Img = tw.img`w-full rounded-2xl`;\n\ninterface UserProfileProps {\n  user: string;\n  userImageURL: string;\n  style?: CSSProperties;\n}\n\nfunction UserProfile({ user, userImageURL, style }: UserProfileProps) {\n  return (\n    <Container style={style}>\n      <Info>\n        <Avater>{userImageURL ? <Img src={userImageURL} alt={user} /> : <AiOutlineSmile />}</Avater>\n        <Name>{user}</Name>\n      </Info>\n    </Container>\n  );\n}\n\nexport default memo(UserProfile);\n","import { useCallback, CSSProperties } from 'react';\nimport styled from 'styled-components/macro';\nimport tw from 'twin.macro';\nimport { TiArrowDownThick } from 'react-icons/ti';\nimport { downloadImage } from 'lib/utils';\n\nconst Button = styled.div<{ $visibleText: boolean }>`\n  ${tw`bg-green-500 p-1.5 cursor-pointer transition duration-300 ease-in-out hover:bg-green-600 pointer-events-auto`};\n  ${({ $visibleText }) => ($visibleText ? tw`rounded-3xl` : tw`rounded-full`)};\n\n  svg {\n    ${tw`text-white text-lg`};\n  }\n`;\nconst Text = tw.p`text-white text-sm font-semibold px-2.5 py-1`;\n\ninterface DownloadButtonProps {\n  name: string;\n  url: string;\n  style?: CSSProperties | undefined;\n  visibleText?: boolean;\n}\n\nfunction DownloadButton({ name, url, style, visibleText = false }: DownloadButtonProps) {\n  const onClickDownload = useCallback(\n    async (e) => {\n      e.stopPropagation();\n      await downloadImage(name, url);\n    },\n    [name, url]\n  );\n\n  return (\n    <Button style={style} onClick={onClickDownload} $visibleText={visibleText}>\n      {visibleText ? <Text>Download</Text> : <TiArrowDownThick />}\n    </Button>\n  );\n}\n\nexport default DownloadButton;\n","import { CSSProperties, memo, useCallback, useState } from 'react';\nimport styled from 'styled-components/macro';\nimport tw from 'twin.macro';\nimport { usePopper } from 'react-popper';\nimport { HiOutlineClipboardCopy } from 'react-icons/hi';\nimport { useToggle } from 'react-use';\nimport { copyTextToClipboard } from 'lib/utils';\nimport DownloadButton from 'components/common/DownloadButton';\nimport Portal from 'components/common/Portal';\n\nconst Container = styled.div`\n  ${tw`py-4 flex`};\n`;\nconst Icon = styled.button`\n  ${tw`mr-4 border-2 border-solid border-green-500 p-2 cursor-pointer transition duration-300 ease-in-out hover:bg-green-500 rounded-full text-green-500 hover:text-white text-lg`};\n`;\nconst Popper = styled.div<{ $visible: boolean }>`\n  ${tw`px-4 py-3 rounded-xl bg-green-100 shadow-lg text-green-500 font-semibold transition duration-300 ease-in-out`};\n  opacity: ${({ $visible }) => +$visible};\n`;\n\ninterface ImageDetailMenuProps {\n  id: number;\n  url: string;\n  style?: CSSProperties;\n}\n\nconst ImageDetailMenu = memo(function ButtonMenu({ id, url, style }: ImageDetailMenuProps) {\n  const [visible, toggle] = useToggle(false);\n  const [referenceRef, setReferenceRef] = useState<HTMLButtonElement | null>(null);\n  const [popperRef, setPopperRef] = useState<HTMLDivElement | null>(null);\n  const { styles, attributes } = usePopper(referenceRef, popperRef, {\n    placement: 'bottom',\n    modifiers: [\n      {\n        name: 'offset',\n        enabled: true,\n        options: {\n          offset: [0, 10],\n        },\n      },\n    ],\n  });\n\n  const onClickCopy = useCallback(async () => {\n    await copyTextToClipboard(url);\n    toggle();\n\n    setTimeout(toggle, 2000);\n  }, [url, toggle]);\n\n  return (\n    <>\n      <Container style={style}>\n        <Icon ref={setReferenceRef} onClick={onClickCopy}>\n          <HiOutlineClipboardCopy />\n        </Icon>\n        <DownloadButton name={`${id}`} url={url} visibleText />\n      </Container>\n      <Portal>\n        <Popper $visible={visible} ref={setPopperRef} style={styles.popper} {...attributes.popper}>\n          copied!\n        </Popper>\n      </Portal>\n    </>\n  );\n});\n\nexport default memo(ImageDetailMenu);\n","import { memo } from 'react';\nimport styled from 'styled-components/macro';\nimport tw from 'twin.macro';\nimport { formatNumberWithCommas } from 'lib/utils';\nimport Menu from './ImageDetailMenu';\nimport UserProfile from 'components/common/UserProfile';\n\nconst Container = styled.div`\n  ${tw`flex items-center px-8 pt-4 pb-8 mx-auto grid gap-4`};\n  grid-template-columns: repeat(1, 1fr 3fr 1fr);\n\n  @media (max-width: 755px) {\n    padding: 12px 16px;\n  }\n  @media (max-width: 580px) {\n    padding: 24px 32px;\n  }\n`;\nconst User = styled.div`\n  @media (max-width: 580px) {\n    display: none;\n  }\n`;\nconst Statistics = styled.div`\n  ${tw`box-border flex grid gap-4`};\n  grid-template-columns: repeat(3, minmax(min-content, 120px));\n\n  @media (max-width: 1007px) {\n    gap: 8px;\n    grid-template-columns: repeat(auto-fill, minmax(64px, 1fr));\n  }\n`;\nconst Statistic = styled.div`\n  ${tw`flex flex-col box-border text-xs text-gray-800 font-semibold`};\n`;\nconst Downloads = styled(Statistic)`\n  @media (max-width: 1007px) {\n    display: none;\n  }\n`;\nconst Label = tw.p`text-gray-500 font-medium`;\n\ninterface ImageDetailInfoProps {\n  visibleMenu: boolean;\n  maxWidth: string;\n  id: number;\n  user: string;\n  userImageURL: string;\n  likes: number;\n  views: number;\n  downloads: number;\n  url: string;\n}\n\nfunction ImageDetailInfo({\n  visibleMenu,\n  maxWidth,\n  id,\n  user,\n  userImageURL,\n  likes,\n  views,\n  downloads,\n  url,\n}: ImageDetailInfoProps) {\n  return (\n    <Container style={{ maxWidth }}>\n      <User>\n        <UserProfile user={user} userImageURL={userImageURL} style={{ padding: 0, fontWeight: 700 }} />\n      </User>\n      <Statistics>\n        <Statistic>\n          <Label>Likes</Label>\n          {formatNumberWithCommas(likes)}\n        </Statistic>\n        <Statistic>\n          <Label>Views</Label>\n          {formatNumberWithCommas(views)}\n        </Statistic>\n        <Downloads>\n          <Label>Downloads</Label>\n          {formatNumberWithCommas(downloads)}\n        </Downloads>\n      </Statistics>\n      {visibleMenu && <Menu id={id} url={url} />}\n    </Container>\n  );\n}\nexport default memo(ImageDetailInfo);\n","import { KeyboardEvent, memo, MouseEvent, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport styled from 'styled-components/macro';\nimport tw from 'twin.macro';\nimport { useToggle, useWindowSize } from 'react-use';\nimport { CgClose } from 'react-icons/cg';\nimport isMobile from 'ismobilejs';\nimport { Image } from 'types/api';\nimport NotFound from 'components/error/NotFound';\nimport UserProfile from 'components/common/UserProfile';\nimport HashLoader from 'components/common/HashLoader';\nimport Info from './ImageDetailInfo';\nimport Menu from './ImageDetailMenu';\n\nModal.setAppElement('#portal');\n\nconst Icon = tw.button`absolute top-0 left-0 p-3 text-2xl text-white text-opacity-80 hover:text-opacity-100 transition duration-150 ease-in-out pointer-events-none`;\n\nconst Paper = styled.div`\n  ${tw`bg-white rounded-3xl shadow-xl min-w-0 m-auto`};\n\n  @media (max-width: 755px) {\n    border-radius: 24px;\n  }\n`;\nconst MobileInfoBox = styled.div`\n  ${tw`px-6 pt-2 pb-4 flex items-center justify-between flex-wrap`};\n`;\nconst ImageBox = styled.div`\n  padding: 32px 32px 16px;\n\n  @media (max-width: 755px) {\n    padding: 0;\n  }\n`;\nconst Img = styled.img`\n  ${tw`w-full block rounded-2xl`};\n  margin: 0 auto;\n\n  @media (max-width: 755px) {\n    border-radius: 24px 24px 0 0;\n  }\n  @media (max-width: 581px) {\n    border-radius: 0;\n  }\n`;\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    cursor: 'zoom-out',\n    zIndex: 20,\n  },\n  content: {\n    cursor: 'default',\n    margin: '48px 120px 0px',\n  },\n};\n\ninterface ImageDetailModalProps {\n  isLoading: boolean;\n  isError: boolean;\n  data: Image | undefined;\n}\n\nfunction ImageDetailModal({ isLoading, isError, data }: ImageDetailModalProps) {\n  const history = useHistory();\n  const { width } = useWindowSize();\n  const [loaded, toggle] = useToggle(false);\n  const isMobileDevice = isMobile(window.navigator).phone || isMobile(window.navigator).tablet;\n  const maxWidth = width > 1260 ? 'calc((100vh - 280px) * 1.5)' : '100%';\n  const hiddenMobile = width > 580 || !isMobileDevice;\n\n  const closeModal = useCallback(\n    (e: MouseEvent | KeyboardEvent) => {\n      e.stopPropagation();\n\n      // referrer 확인해서 뒤로가기 구현해야하나 테스트이므로 심플하게 구현\n      // document.referrer && document.referrer.indexOf('###') !== -1\n      //   ? history.goBack()\n      //   : history.replace(routes[location.pathname.includes(routes.swr.path) ? 'swr' : 'reactQuery'].path);\n      history.goBack();\n    },\n    [history]\n  );\n\n  const onLoad = useCallback(() => {\n    toggle();\n  }, [toggle]);\n\n  return (\n    <Modal isOpen className=\"modal-content\" onRequestClose={closeModal} style={customStyles} contentLabel=\"Image Modal\">\n      <Icon>\n        <CgClose />\n      </Icon>\n      {isLoading ? (\n        <HashLoader />\n      ) : isError || !data ? (\n        <Paper>\n          <NotFound isError={isError} />\n        </Paper>\n      ) : (\n        <Paper>\n          {!hiddenMobile && loaded && (\n            <MobileInfoBox>\n              <UserProfile\n                user={data.user}\n                userImageURL={data.userImageURL}\n                style={{ padding: '12px 16px 0 0', fontWeight: 700 }}\n              />\n              <Menu id={data.id} url={data.largeImageURL || data.webformatURL} style={{ padding: '12px 0 0' }} />\n            </MobileInfoBox>\n          )}\n          <ImageBox>\n            <Img src={data.webformatURL} alt={`${data.id}`} style={{ maxWidth }} onLoad={onLoad} />\n          </ImageBox>\n          <Info\n            visibleMenu={hiddenMobile && loaded}\n            maxWidth={maxWidth}\n            id={data.id}\n            user={data.user}\n            userImageURL={data.userImageURL}\n            likes={data.likes}\n            views={data.views}\n            downloads={data.downloads}\n            url={data.largeImageURL || data.webformatURL}\n          />\n        </Paper>\n      )}\n    </Modal>\n  );\n}\n\nexport default memo(ImageDetailModal);\n","import useSWR from 'swr';\nimport axios from 'axios';\nimport { API_URL } from 'constant';\nimport { Image, Images } from 'types/api';\n\nconst fetcher = async (url: string, id: string) => {\n  const { data } = await axios.get<Images>(url, {\n    params: {\n      id,\n    },\n  });\n\n  // 리스트 API만 있어, 아이템 API로 이용하기위해 고정\n  return data.hits[0];\n};\n\nfunction useSwrImage(id: string) {\n  const { data, error } = useSWR<Image>([API_URL, id], fetcher);\n\n  return {\n    data,\n    isLoading: !error && !data,\n    isError: !!error,\n  };\n}\n\nexport default useSwrImage;\n","import { useParams } from 'react-router-dom';\nimport useSwrImage from 'lib/hooks/useSwrImage';\nimport ImageDetailModal from 'components/image/ImageDetailModal';\n\nfunction SwrDetailView() {\n  const { id } = useParams<{ id: string }>();\n  const { isLoading, isError, data } = useSwrImage(id);\n\n  return <ImageDetailModal isLoading={isLoading} isError={isError} data={data} />;\n}\n\nexport default SwrDetailView;\n"],"sourceRoot":""}